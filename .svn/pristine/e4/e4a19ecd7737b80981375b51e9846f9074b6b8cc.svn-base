package appli.controller.domaine.administration.action;

import java.util.List;

import javax.inject.Inject;

import org.hibernate.criterion.Order;

import appli.controller.domaine.administration.bean.EtablissementBean;
import appli.controller.domaine.administration.bean.SocieteBean;
import appli.controller.domaine.util_erp.ContextAppli;
import appli.model.domaine.administration.service.IEtablissementService;
import appli.model.domaine.administration.service.ISocieteService;
import framework.controller.ActionBase;
import framework.controller.ActionUtil;
import framework.controller.annotation.WorkController;
import framework.model.beanContext.AbonnePersistant;
import framework.model.beanContext.EtablissementPersistant;
import framework.model.beanContext.SocietePersistant;
import framework.model.common.service.MessageService;
import framework.model.common.util.BooleanUtil;
import framework.model.common.util.ReflectUtil;
import framework.model.util.audit.ReplicationGenerationEventListener;


@WorkController(nameSpace="admin", bean=SocieteBean.class, jspRootPath="/domaine/administration/")
public class SocieteAction extends ActionBase {
	
	@Inject
	private ISocieteService societeService;
	@Inject
	private IEtablissementService etsService;
	
	public void work_init(ActionUtil httpUtil) {
//		Long societeId = httpUtil.getWorkIdLong();
//		if(societeId != null){
//			httpUtil.setMenuAttribute("SocieteId", societeId);
//		} else{
//			societeId = (Long)httpUtil.getMenuAttribute("SocieteId");
//		}
//		if(!httpUtil.isCreateAction()){
//			// Gérer le retour sur cet onglet
//			societeId = (Long)httpUtil.getMenuAttribute("SocieteId");
//			if(societeId != null && !httpUtil.isCrudOperation()){
//				loadBean(httpUtil, societeId);
//			}
//		} else{
//			httpUtil.removeMenuAttribute("SocieteId");
//		}	
		
		List<SocietePersistant> listSociete = societeService.findAllNoFilter(SocietePersistant.class);
		if(listSociete.size() == 0){
			AbonnePersistant abonneBean = ContextAppli.getAbonneBean();
			if(abonneBean == null){
				abonneBean = new AbonnePersistant();
				abonneBean.setCode_func("ABN_"+System.currentTimeMillis());
				abonneBean.setRaison_sociale("Abonné");
				societeService.mergeEntity(abonneBean);
				MessageService.getGlobalMap().put("GLOBAL_ABONNE", ReflectUtil.cloneBean(abonneBean));
			}
			SocieteBean socB = new SocieteBean();
			socB.setRaison_sociale("Société");
			socB.setOpc_abonne(abonneBean);
			socB.setCode_func("SOC_"+abonneBean.getId());
			//
			socB = societeService.merge(socB);
			MessageService.getGlobalMap().put("GLOBAL_SOCIETE", socB);
		
			List<EtablissementPersistant> listEts = societeService.findAllNoFilter(EtablissementPersistant.class);
			for (EtablissementPersistant etsP : listEts) {
				etsP.setOpc_societe(socB);
				etsP.setOpc_abonne(abonneBean);
				etsP.setCode_func("ETS_"+abonneBean.getId());
				//
				societeService.mergeEntity(etsP);
				
				etsP = (EtablissementPersistant)MessageService.getGlobalMap().get("GLOBAL_ETABLISSEMENT");
				etsP.setOpc_abonne(abonneBean);
				etsP.setOpc_societe(socB);
			}
		}
	}
	
	@Override
	public void work_edit(ActionUtil httpUtil) {
		if(ContextAppli.getSocieteBean() != null) {
			Long societeId = ContextAppli.getSocieteBean().getId();
			httpUtil.setMenuAttribute("SocieteId", societeId);
			httpUtil.setViewBean(societeService.findById(societeId));
		}
		
		httpUtil.setDynamicUrl("/domaine/administration/societe_edit.jsp");
	}
	
//	@Override
//	public void work_find(ActionUtil httpUtil) {
//		MessageService.getGlobalMap().put("NO_ETS", true);
//		super.work_find(httpUtil);
//		MessageService.getGlobalMap().remove("NO_ETS");
//	}
	
	@Override
	public void work_merge(ActionUtil httpUtil) {
		SocieteBean societeB = (SocieteBean) httpUtil.getViewBean();
		societeB.setId(httpUtil.getWorkIdLong());
		societeService.merge(societeB);
		
		// Maj ets
		EtablissementBean etsB = etsService.findById(ContextAppli.getEtablissementBean().getId());
		etsB.setNumero_ice(societeB.getNumero_ice());
		etsB.setNumero_rcs(societeB.getNumero_rcs());
		etsB.setNumero_tva(societeB.getNumero_tva());
		etsService.merge(etsB);
		
		work_edit(httpUtil);
		managePieceJointe(httpUtil, ((SocieteBean)httpUtil.getViewBean()).getId(), "societe", 300, 300);// Image logo
	}
	
	/**
	 * @param httpUtil
	 */
	public void desactiver(ActionUtil httpUtil) {
		societeService.activerDesactiverElement(httpUtil.getWorkIdLong());
		work_edit(httpUtil);
	}
	
	public void changer_ets(ActionUtil httpUtil) {
		if(!ReplicationGenerationEventListener._IS_CLOUD_SYNCHRO_INSTANCE){
			return;
		}
		if(httpUtil.getParameter("isSub") == null){
			if(ContextAppli.getUserBean().isInProfile("ADMIN")
					|| BooleanUtil.isTrue(ContextAppli.getUserBean().getOpc_profile().getIs_multi_ets())) {
				EtablissementPersistant currEts = ContextAppli.getEtablissementBean();
				List<EtablissementPersistant> listEts = societeService.findByField(EtablissementPersistant.class, "opc_societe.id", currEts.getOpc_societe().getId(),  Order.asc("societe_id"), Order.asc("nom"));
				httpUtil.setUserAttribute("listEtsAvailaible", listEts);
			}
			// ------------------------------------------------------------------------
			httpUtil.setDynamicUrl("/domaine/dashboard_erp/switch_ets.jsp");
			return;
		}
		
		Long currEts = httpUtil.getWorkIdLong();
		EtablissementPersistant ets = societeService.findById(EtablissementPersistant.class, currEts);
		
		Object cloneBean = ReflectUtil.cloneBean(ets);
		MessageService.getGlobalMap().put("GLOBAL_ETABLISSEMENT", cloneBean);
		httpUtil.setUserAttribute("GLOBAL_ETABLISSEMENT", cloneBean);
		
		societeService.majLastConnectedEts(currEts);
		ContextAppli.getAbonneBean().setLast_ets(currEts);
		
		httpUtil.writeResponse("REDIRECT:"+httpUtil.getRequest().getServletContext().getContextPath()+"?jtn="+ets.getToken());			
	}
	
}
